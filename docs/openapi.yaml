openapi: 3.1.0
info:
  title: Task Manager API
  version: 1.0.0
  description: |
    API for user registration, authentication, and task management.
servers:
  - url: https://{your-api-id}.execute-api.us-east-1.amazonaws.com/dev
    description: Development environment (stage `dev`)
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    AuthResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    Task:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the task (UUID)
        title:
          type: string
          description: The title of the task
        description:
          type: string
          description: Detailed description of the task
        status:
          type: string
          description: Current status of the task (e.g., TODO, IN_PROGRESS, DONE)
        createdAt:
          type: number
          format: float
          description: Timestamp when the task was created (Unix epoch)
        updatedAt:
          type: number
          format: float
          description: Timestamp when the task was last updated (Unix epoch)
        userId:
          type: string
          description: ID of the user who owns the task
      required:
        - _id
        - title
        - status
        - createdAt
        - updatedAt
        - userId
    CreateTaskRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
      required:
        - title
    UpdateStatusRequest:
      type: object
      properties:
        status:
          type: string
          description: The new status for the task
      required:
        - status
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Description of the error
      required:
        - error
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input data or Email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /login:
    post:
      summary: Authenticate user and obtain JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /tasks:
    post:
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Title is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error or Failed to retrieve created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all tasks for authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /tasks/{taskId}/status:
    put:
      summary: Update task status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: Task ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusRequest'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Task ID or Status is required, or Invalid Task ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /tasks/{taskId}:
    get: 
      summary: Get a single task by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: Task ID
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Task ID is required or Invalid Task ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: Task ID
      responses:
        '204':
          description: Task deleted successfully
        '400':
          description: Task ID is required or Invalid Task ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /docs:
    get:
      summary: Get API Documentation HTML
      description: Serves the static HTML page for API documentation (rendered using Redoc).
      responses:
        '200':
          description: HTML documentation page
          content:
            text/html:
              schema:
                type: string
                format: html
        '500':
          description: Documentation not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /openapi.yaml:
    get:
      summary: Get OpenAPI Specification
      description: Serves the raw OpenAPI specification file in YAML format.
      responses:
        '200':
          description: OpenAPI specification file
          content:
            application/yaml:
              schema:
                type: string
        '500':
          description: OpenAPI spec not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
security:
  - bearerAuth: []
